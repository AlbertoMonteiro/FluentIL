<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\git\FluentIL\src\FluentIL.Tests\bin\Debug\FluentIL.Tests.dll" total="80" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2011-05-03" time="21:20:37">
  <environment nunit-version="2.5.9.10348" clr-version="2.0.50727.4959" os-version="Microsoft Windows NT 6.1.7600.0" platform="Win32NT" cwd="C:\Program Files (x86)\NUnit 2.5.9\bin\net-2.0" machine-name="CXJ0126" user="elemar" user-domain="PROMOB" />
  <culture-info current-culture="pt-BR" current-uiculture="pt-BR" />
  <test-suite type="Assembly" name="C:\git\FluentIL\src\FluentIL.Tests\bin\Debug\FluentIL.Tests.dll" executed="True" result="Success" success="True" time="1.271" asserts="0">
    <results>
      <test-suite type="Namespace" name="FluentIL" executed="True" result="Success" success="True" time="1.245" asserts="0">
        <results>
          <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="1.242" asserts="0">
            <results>
              <test-suite type="TestFixture" name="ConditionalStudies" executed="True" result="Success" success="True" time="0.345" asserts="0">
                <results>
                  <test-case name="FluentIL.Tests.ConditionalStudies.EnsureLimits_Min10Max20_Reference" executed="True" result="Success" success="True" time="0.187" asserts="0" />
                  <test-case name="FluentIL.Tests.ConditionalStudies.EnsureLimits_Min10Max20_Reference2" executed="True" result="Success" success="True" time="0.012" asserts="0" />
                  <test-case name="FluentIL.Tests.ConditionalStudies.EnsureLimits_Min10Max20_Reference3" executed="True" result="Success" success="True" time="0.012" asserts="0" />
                  <test-case name="FluentIL.Tests.ConditionalStudies.EnsureLimits_Min10Max20_Reference4" executed="True" result="Success" success="True" time="0.013" asserts="0" />
                  <test-case name="FluentIL.Tests.ConditionalStudies.EnsureLimits_Min10Max20_Reference5" executed="True" result="Success" success="True" time="0.018" asserts="0" />
                  <test-case name="FluentIL.Tests.ConditionalStudies.MultipleConditions" executed="True" result="Success" success="True" time="0.016" asserts="0" />
                  <test-case name="FluentIL.Tests.ConditionalStudies.MultipleConditions_2" executed="True" result="Success" success="True" time="0.011" asserts="0" />
                  <test-case name="FluentIL.Tests.ConditionalStudies.MultipleConditions_Reference" executed="True" result="Success" success="True" time="0.013" asserts="0" />
                  <test-case name="FluentIL.Tests.ConditionalStudies.TwoNumbersAreEquals_TrueReturnsYesFalseReturnsNo" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                  <test-case name="FluentIL.Tests.ConditionalStudies.TwoNumbersAreEquals_TrueReturnsYesFalseReturnsNo_Reference" executed="True" result="Success" success="True" time="0.008" asserts="0" />
                  <test-case name="FluentIL.Tests.ConditionalStudies.TwoNumbersAreEquals_TrueReturnsYesFalseReturnsNo_Reference2" executed="True" result="Success" success="True" time="0.011" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DynamicMethodInfoTests" executed="True" result="Success" success="True" time="0.078" asserts="0">
                <results>
                  <test-case name="FluentIL.Tests.DynamicMethodInfoTests.AsDynamicMethod_WithNotNullDynamicTypeInfo_ThrowsInvalidOperationException" executed="True" result="Success" success="True" time="0.011" asserts="0" />
                  <test-case name="FluentIL.Tests.DynamicMethodInfoTests.ctor_implicitConvertionToDyamicMethod_ReturnTypeShouldBeVoid" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                  <test-case name="FluentIL.Tests.DynamicMethodInfoTests.ctor_implicitConvertionToDyamicMethod_ShouldHaveNoParameters" executed="True" result="Success" success="True" time="0.020" asserts="0" />
                  <test-case name="FluentIL.Tests.DynamicMethodInfoTests.Returns_PassingAny_ShouldReturnSameValueOfBodyProperty" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="FluentIL.Tests.DynamicMethodInfoTests.Returns_PassingInt_ReturnTypeShouldBeInt" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                  <test-case name="FluentIL.Tests.DynamicMethodInfoTests.WithParameter_OneTimePassingInt_DynamicMethodShouldHaveOneParamInt" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                  <test-case name="FluentIL.Tests.DynamicMethodInfoTests.WithParameter_PassingIntAnsString_DynamicMethodShouldHaveOneParamIntAndAnotherString" executed="True" result="Success" success="True" time="0.017" asserts="0" />
                  <test-case name="FluentIL.Tests.DynamicMethodInfoTests.WithParameter_TwoTimesPassingInt_DynamicMethodShouldHaveOneParamInt" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DynamicTypeInfoTests" executed="True" result="Success" success="True" time="0.014" asserts="0">
                <results>
                  <test-case name="FluentIL.Tests.DynamicTypeInfoTests.AsType_ReturnedTypeShouldBeInstantiableViaActivatorCreateInstance" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                  <test-case name="FluentIL.Tests.DynamicTypeInfoTests.AsType_ReturnsTypeWithSpecifiedName" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="FluentIL.Tests.DynamicTypeInfoTests.TypeBuilder_InvokedTwoTimes_ReturnsSameValue" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="IsPrimeStudies" executed="True" result="Success" success="True" time="0.170" asserts="0">
                <results>
                  <test-case name="FluentIL.Tests.IsPrimeStudies.IsPrimeV1_Passing0_ReturnsFalse" executed="True" result="Success" success="True" time="0.030" asserts="0" />
                  <test-case name="FluentIL.Tests.IsPrimeStudies.IsPrimeV1_Passing1_ReturnsFalse" executed="True" result="Success" success="True" time="0.006" asserts="0" />
                  <test-case name="FluentIL.Tests.IsPrimeStudies.IsPrimeV1_Passing2_Returnstrue" executed="True" result="Success" success="True" time="0.017" asserts="0" />
                  <test-case name="FluentIL.Tests.IsPrimeStudies.IsPrimeV1_Passing3_ReturnsTrue" executed="True" result="Success" success="True" time="0.020" asserts="0" />
                  <test-case name="FluentIL.Tests.IsPrimeStudies.IsPrimeV1_Passing4_ReturnsFalse" executed="True" result="Success" success="True" time="0.019" asserts="0" />
                  <test-case name="FluentIL.Tests.IsPrimeStudies.IsPrimeV2_PassingOk" executed="True" result="Success" success="True" time="0.024" asserts="0" />
                  <test-case name="FluentIL.Tests.IsPrimeStudies.IsPrimeV3_PassingOk" executed="True" result="Success" success="True" time="0.029" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="MathStudies" executed="True" result="Success" success="True" time="0.137" asserts="0">
                <results>
                  <test-case name="FluentIL.Tests.MathStudies.AddToVar" executed="True" result="Success" success="True" time="0.006" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.AddToVar_2" executed="True" result="Success" success="True" time="0.006" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.AddToVar_Reference" executed="True" result="Success" success="True" time="0.012" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.AddToVar_Reference2" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.MinusOnePlus40" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.ThreeTimesFive" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.TwoMulThree" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.TwoMulThree_2" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.TwoMulThree_3" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.TwoPlusTwo" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.TwoPlusTwo_2" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.TwoPlusTwo_3" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.TwoPlusTwo_4" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.TwoPlusTwo_Reference" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.TwoPlusTwoWithNamedParameters" executed="True" result="Success" success="True" time="0.010" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.TwoPlusTwoWithParameters" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.TwoPlusTwoWithParameters_2" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="FluentIL.Tests.MathStudies.TwoPlusTwoWithParameters_Reference" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="NewTypeStudies" executed="True" result="Success" success="True" time="0.036" asserts="0">
                <results>
                  <test-case name="FluentIL.Tests.NewTypeStudies.ClassWithMultAndDivMethods" executed="True" result="Success" success="True" time="0.009" asserts="0" />
                  <test-case name="FluentIL.Tests.NewTypeStudies.ClassWithMultAndDivMethodsImplementingInterface" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                  <test-case name="FluentIL.Tests.NewTypeStudies.CreateTypeWithOneMethod" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                  <test-case name="FluentIL.Tests.NewTypeStudies.TwoPlusTwoWithNamedParameters" executed="True" result="Success" success="True" time="0.006" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="SayHelloStudies" executed="True" result="Success" success="True" time="0.327" asserts="0">
                <results>
                  <test-case name="FluentIL.Tests.SayHelloStudies.CheckingEmptyParameterV1_PassingEmpty_ThrowsArgumentException" executed="True" result="Success" success="True" time="0.011" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.CheckingEmptyParameterV1_PassingNotEmpty_ThrowsNothing" executed="True" result="Success" success="True" time="0.006" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.CheckingEmptyParameterV2_PassingEmpty_ThrowsArgumentException" executed="True" result="Success" success="True" time="0.010" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.CheckingEmptyParameterV2_PassingNotEmpty_ThrowsNothing" executed="True" result="Success" success="True" time="0.008" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.CheckingNullParameterV1_PassingNotNull_ThrowsNothing" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.CheckingNullParameterV1_PassingNull_ThrowsArgumentNullException" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.CheckingNullParameterV2_PassingNotNull_ThrowsNothing" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.CheckingNullParameterV2_PassingNull_ThrowsArgumentNullException" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.SayHelloV1_PassingElemar_ReturnsHelloElemar" executed="True" result="Success" success="True" time="0.017" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.SayHelloV1_PassingEmpty_ThrowsArgumentException" executed="True" result="Success" success="True" time="0.014" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.SayHelloV1_PassingNull_ThrowsArgumentNullException" executed="True" result="Success" success="True" time="0.012" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.SayHelloV2_PassingElemar_ReturnsHelloElemar" executed="True" result="Success" success="True" time="0.015" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.SayHelloV2_PassingEmpty_ThrowsArgumentException" executed="True" result="Success" success="True" time="0.013" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.SayHelloV2_PassingNull_ThrowsArgumentNullException" executed="True" result="Success" success="True" time="0.013" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.SayHelloV3_PassingElemar_ReturnsHelloElemar" executed="True" result="Success" success="True" time="0.017" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.SayHelloV3_PassingEmpty_ThrowsArgumentException" executed="True" result="Success" success="True" time="0.013" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.SayHelloV3_PassingNull_ThrowsArgumentNullException" executed="True" result="Success" success="True" time="0.010" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.SayHelloV4_PassingElemar_ReturnsHelloElemar" executed="True" result="Success" success="True" time="0.015" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.SayHelloV4_PassingEmpty_ThrowsArgumentException" executed="True" result="Success" success="True" time="0.013" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.SayHelloV4_PassingNull_ThrowsArgumentNullException" executed="True" result="Success" success="True" time="0.013" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.SayHelloV5_PassingElemar_ReturnsHelloElemar" executed="True" result="Success" success="True" time="0.017" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.SayHelloV5_PassingEmpty_ThrowsArgumentException" executed="True" result="Success" success="True" time="0.010" asserts="0" />
                  <test-case name="FluentIL.Tests.SayHelloStudies.SayHelloV5_PassingNull_ThrowsArgumentNullException" executed="True" result="Success" success="True" time="0.012" asserts="0" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="VariableStudies" executed="True" result="Success" success="True" time="0.088" asserts="0">
                <results>
                  <test-case name="FluentIL.Tests.VariableStudies.StLoc_SameInTwoVariables" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                  <test-case name="FluentIL.Tests.VariableStudies.StLoc_SameInTwoVariables_Reference" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="FluentIL.Tests.VariableStudies.SumOf100To1_For" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                  <test-case name="FluentIL.Tests.VariableStudies.SumOf1To100" executed="True" result="Success" success="True" time="0.023" asserts="0" />
                  <test-case name="FluentIL.Tests.VariableStudies.SumOf1To100_For" executed="True" result="Success" success="True" time="0.014" asserts="0" />
                  <test-case name="FluentIL.Tests.VariableStudies.SumOf1To100_Reference" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>